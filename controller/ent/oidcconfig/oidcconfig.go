// Code generated by ent, DO NOT EDIT.

package oidcconfig

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the oidcconfig type in the database.
	Label = "oidc_config"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProviderKey holds the string denoting the provider_key field in the database.
	FieldProviderKey = "provider_key"
	// FieldProviderName holds the string denoting the provider_name field in the database.
	FieldProviderName = "provider_name"
	// FieldDiscoveryURI holds the string denoting the discovery_uri field in the database.
	FieldDiscoveryURI = "discovery_uri"
	// FieldClientID holds the string denoting the client_id field in the database.
	FieldClientID = "client_id"
	// FieldClientSecret holds the string denoting the client_secret field in the database.
	FieldClientSecret = "client_secret"
	// FieldRedirectURI holds the string denoting the redirect_uri field in the database.
	FieldRedirectURI = "redirect_uri"
	// Table holds the table name of the oidcconfig in the database.
	Table = "oidc_configs"
)

// Columns holds all SQL columns for oidcconfig fields.
var Columns = []string{
	FieldID,
	FieldProviderKey,
	FieldProviderName,
	FieldDiscoveryURI,
	FieldClientID,
	FieldClientSecret,
	FieldRedirectURI,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// ProviderKeyValidator is a validator for the "provider_key" field. It is called by the builders before save.
	ProviderKeyValidator func(string) error
	// ProviderNameValidator is a validator for the "provider_name" field. It is called by the builders before save.
	ProviderNameValidator func(string) error
	// DiscoveryURIValidator is a validator for the "discovery_uri" field. It is called by the builders before save.
	DiscoveryURIValidator func(string) error
	// ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	ClientIDValidator func(string) error
	// ClientSecretValidator is a validator for the "client_secret" field. It is called by the builders before save.
	ClientSecretValidator func(string) error
	// RedirectURIValidator is a validator for the "redirect_uri" field. It is called by the builders before save.
	RedirectURIValidator func(string) error
)

// OrderOption defines the ordering options for the OIDCConfig queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByProviderKey orders the results by the provider_key field.
func ByProviderKey(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProviderKey, opts...).ToFunc()
}

// ByProviderName orders the results by the provider_name field.
func ByProviderName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProviderName, opts...).ToFunc()
}

// ByDiscoveryURI orders the results by the discovery_uri field.
func ByDiscoveryURI(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDiscoveryURI, opts...).ToFunc()
}

// ByClientID orders the results by the client_id field.
func ByClientID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldClientID, opts...).ToFunc()
}

// ByClientSecret orders the results by the client_secret field.
func ByClientSecret(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldClientSecret, opts...).ToFunc()
}

// ByRedirectURI orders the results by the redirect_uri field.
func ByRedirectURI(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRedirectURI, opts...).ToFunc()
}
