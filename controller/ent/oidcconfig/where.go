// Code generated by ent, DO NOT EDIT.

package oidcconfig

import (
	"entgo.io/ent/dialect/sql"
	"github.com/lapwingcloud/lapwingwire/controller/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLTE(FieldID, id))
}

// ProviderKey applies equality check predicate on the "provider_key" field. It's identical to ProviderKeyEQ.
func ProviderKey(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldProviderKey, v))
}

// ProviderName applies equality check predicate on the "provider_name" field. It's identical to ProviderNameEQ.
func ProviderName(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldProviderName, v))
}

// DiscoveryURI applies equality check predicate on the "discovery_uri" field. It's identical to DiscoveryURIEQ.
func DiscoveryURI(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldDiscoveryURI, v))
}

// ClientID applies equality check predicate on the "client_id" field. It's identical to ClientIDEQ.
func ClientID(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldClientID, v))
}

// ClientSecret applies equality check predicate on the "client_secret" field. It's identical to ClientSecretEQ.
func ClientSecret(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldClientSecret, v))
}

// RedirectURI applies equality check predicate on the "redirect_uri" field. It's identical to RedirectURIEQ.
func RedirectURI(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldRedirectURI, v))
}

// ProviderKeyEQ applies the EQ predicate on the "provider_key" field.
func ProviderKeyEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldProviderKey, v))
}

// ProviderKeyNEQ applies the NEQ predicate on the "provider_key" field.
func ProviderKeyNEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNEQ(FieldProviderKey, v))
}

// ProviderKeyIn applies the In predicate on the "provider_key" field.
func ProviderKeyIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldIn(FieldProviderKey, vs...))
}

// ProviderKeyNotIn applies the NotIn predicate on the "provider_key" field.
func ProviderKeyNotIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNotIn(FieldProviderKey, vs...))
}

// ProviderKeyGT applies the GT predicate on the "provider_key" field.
func ProviderKeyGT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGT(FieldProviderKey, v))
}

// ProviderKeyGTE applies the GTE predicate on the "provider_key" field.
func ProviderKeyGTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGTE(FieldProviderKey, v))
}

// ProviderKeyLT applies the LT predicate on the "provider_key" field.
func ProviderKeyLT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLT(FieldProviderKey, v))
}

// ProviderKeyLTE applies the LTE predicate on the "provider_key" field.
func ProviderKeyLTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLTE(FieldProviderKey, v))
}

// ProviderKeyContains applies the Contains predicate on the "provider_key" field.
func ProviderKeyContains(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContains(FieldProviderKey, v))
}

// ProviderKeyHasPrefix applies the HasPrefix predicate on the "provider_key" field.
func ProviderKeyHasPrefix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasPrefix(FieldProviderKey, v))
}

// ProviderKeyHasSuffix applies the HasSuffix predicate on the "provider_key" field.
func ProviderKeyHasSuffix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasSuffix(FieldProviderKey, v))
}

// ProviderKeyEqualFold applies the EqualFold predicate on the "provider_key" field.
func ProviderKeyEqualFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEqualFold(FieldProviderKey, v))
}

// ProviderKeyContainsFold applies the ContainsFold predicate on the "provider_key" field.
func ProviderKeyContainsFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContainsFold(FieldProviderKey, v))
}

// ProviderNameEQ applies the EQ predicate on the "provider_name" field.
func ProviderNameEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldProviderName, v))
}

// ProviderNameNEQ applies the NEQ predicate on the "provider_name" field.
func ProviderNameNEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNEQ(FieldProviderName, v))
}

// ProviderNameIn applies the In predicate on the "provider_name" field.
func ProviderNameIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldIn(FieldProviderName, vs...))
}

// ProviderNameNotIn applies the NotIn predicate on the "provider_name" field.
func ProviderNameNotIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNotIn(FieldProviderName, vs...))
}

// ProviderNameGT applies the GT predicate on the "provider_name" field.
func ProviderNameGT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGT(FieldProviderName, v))
}

// ProviderNameGTE applies the GTE predicate on the "provider_name" field.
func ProviderNameGTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGTE(FieldProviderName, v))
}

// ProviderNameLT applies the LT predicate on the "provider_name" field.
func ProviderNameLT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLT(FieldProviderName, v))
}

// ProviderNameLTE applies the LTE predicate on the "provider_name" field.
func ProviderNameLTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLTE(FieldProviderName, v))
}

// ProviderNameContains applies the Contains predicate on the "provider_name" field.
func ProviderNameContains(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContains(FieldProviderName, v))
}

// ProviderNameHasPrefix applies the HasPrefix predicate on the "provider_name" field.
func ProviderNameHasPrefix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasPrefix(FieldProviderName, v))
}

// ProviderNameHasSuffix applies the HasSuffix predicate on the "provider_name" field.
func ProviderNameHasSuffix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasSuffix(FieldProviderName, v))
}

// ProviderNameEqualFold applies the EqualFold predicate on the "provider_name" field.
func ProviderNameEqualFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEqualFold(FieldProviderName, v))
}

// ProviderNameContainsFold applies the ContainsFold predicate on the "provider_name" field.
func ProviderNameContainsFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContainsFold(FieldProviderName, v))
}

// DiscoveryURIEQ applies the EQ predicate on the "discovery_uri" field.
func DiscoveryURIEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldDiscoveryURI, v))
}

// DiscoveryURINEQ applies the NEQ predicate on the "discovery_uri" field.
func DiscoveryURINEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNEQ(FieldDiscoveryURI, v))
}

// DiscoveryURIIn applies the In predicate on the "discovery_uri" field.
func DiscoveryURIIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldIn(FieldDiscoveryURI, vs...))
}

// DiscoveryURINotIn applies the NotIn predicate on the "discovery_uri" field.
func DiscoveryURINotIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNotIn(FieldDiscoveryURI, vs...))
}

// DiscoveryURIGT applies the GT predicate on the "discovery_uri" field.
func DiscoveryURIGT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGT(FieldDiscoveryURI, v))
}

// DiscoveryURIGTE applies the GTE predicate on the "discovery_uri" field.
func DiscoveryURIGTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGTE(FieldDiscoveryURI, v))
}

// DiscoveryURILT applies the LT predicate on the "discovery_uri" field.
func DiscoveryURILT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLT(FieldDiscoveryURI, v))
}

// DiscoveryURILTE applies the LTE predicate on the "discovery_uri" field.
func DiscoveryURILTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLTE(FieldDiscoveryURI, v))
}

// DiscoveryURIContains applies the Contains predicate on the "discovery_uri" field.
func DiscoveryURIContains(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContains(FieldDiscoveryURI, v))
}

// DiscoveryURIHasPrefix applies the HasPrefix predicate on the "discovery_uri" field.
func DiscoveryURIHasPrefix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasPrefix(FieldDiscoveryURI, v))
}

// DiscoveryURIHasSuffix applies the HasSuffix predicate on the "discovery_uri" field.
func DiscoveryURIHasSuffix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasSuffix(FieldDiscoveryURI, v))
}

// DiscoveryURIEqualFold applies the EqualFold predicate on the "discovery_uri" field.
func DiscoveryURIEqualFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEqualFold(FieldDiscoveryURI, v))
}

// DiscoveryURIContainsFold applies the ContainsFold predicate on the "discovery_uri" field.
func DiscoveryURIContainsFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContainsFold(FieldDiscoveryURI, v))
}

// ClientIDEQ applies the EQ predicate on the "client_id" field.
func ClientIDEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldClientID, v))
}

// ClientIDNEQ applies the NEQ predicate on the "client_id" field.
func ClientIDNEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNEQ(FieldClientID, v))
}

// ClientIDIn applies the In predicate on the "client_id" field.
func ClientIDIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldIn(FieldClientID, vs...))
}

// ClientIDNotIn applies the NotIn predicate on the "client_id" field.
func ClientIDNotIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNotIn(FieldClientID, vs...))
}

// ClientIDGT applies the GT predicate on the "client_id" field.
func ClientIDGT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGT(FieldClientID, v))
}

// ClientIDGTE applies the GTE predicate on the "client_id" field.
func ClientIDGTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGTE(FieldClientID, v))
}

// ClientIDLT applies the LT predicate on the "client_id" field.
func ClientIDLT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLT(FieldClientID, v))
}

// ClientIDLTE applies the LTE predicate on the "client_id" field.
func ClientIDLTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLTE(FieldClientID, v))
}

// ClientIDContains applies the Contains predicate on the "client_id" field.
func ClientIDContains(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContains(FieldClientID, v))
}

// ClientIDHasPrefix applies the HasPrefix predicate on the "client_id" field.
func ClientIDHasPrefix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasPrefix(FieldClientID, v))
}

// ClientIDHasSuffix applies the HasSuffix predicate on the "client_id" field.
func ClientIDHasSuffix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasSuffix(FieldClientID, v))
}

// ClientIDEqualFold applies the EqualFold predicate on the "client_id" field.
func ClientIDEqualFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEqualFold(FieldClientID, v))
}

// ClientIDContainsFold applies the ContainsFold predicate on the "client_id" field.
func ClientIDContainsFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContainsFold(FieldClientID, v))
}

// ClientSecretEQ applies the EQ predicate on the "client_secret" field.
func ClientSecretEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldClientSecret, v))
}

// ClientSecretNEQ applies the NEQ predicate on the "client_secret" field.
func ClientSecretNEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNEQ(FieldClientSecret, v))
}

// ClientSecretIn applies the In predicate on the "client_secret" field.
func ClientSecretIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldIn(FieldClientSecret, vs...))
}

// ClientSecretNotIn applies the NotIn predicate on the "client_secret" field.
func ClientSecretNotIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNotIn(FieldClientSecret, vs...))
}

// ClientSecretGT applies the GT predicate on the "client_secret" field.
func ClientSecretGT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGT(FieldClientSecret, v))
}

// ClientSecretGTE applies the GTE predicate on the "client_secret" field.
func ClientSecretGTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGTE(FieldClientSecret, v))
}

// ClientSecretLT applies the LT predicate on the "client_secret" field.
func ClientSecretLT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLT(FieldClientSecret, v))
}

// ClientSecretLTE applies the LTE predicate on the "client_secret" field.
func ClientSecretLTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLTE(FieldClientSecret, v))
}

// ClientSecretContains applies the Contains predicate on the "client_secret" field.
func ClientSecretContains(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContains(FieldClientSecret, v))
}

// ClientSecretHasPrefix applies the HasPrefix predicate on the "client_secret" field.
func ClientSecretHasPrefix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasPrefix(FieldClientSecret, v))
}

// ClientSecretHasSuffix applies the HasSuffix predicate on the "client_secret" field.
func ClientSecretHasSuffix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasSuffix(FieldClientSecret, v))
}

// ClientSecretEqualFold applies the EqualFold predicate on the "client_secret" field.
func ClientSecretEqualFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEqualFold(FieldClientSecret, v))
}

// ClientSecretContainsFold applies the ContainsFold predicate on the "client_secret" field.
func ClientSecretContainsFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContainsFold(FieldClientSecret, v))
}

// RedirectURIEQ applies the EQ predicate on the "redirect_uri" field.
func RedirectURIEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEQ(FieldRedirectURI, v))
}

// RedirectURINEQ applies the NEQ predicate on the "redirect_uri" field.
func RedirectURINEQ(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNEQ(FieldRedirectURI, v))
}

// RedirectURIIn applies the In predicate on the "redirect_uri" field.
func RedirectURIIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldIn(FieldRedirectURI, vs...))
}

// RedirectURINotIn applies the NotIn predicate on the "redirect_uri" field.
func RedirectURINotIn(vs ...string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldNotIn(FieldRedirectURI, vs...))
}

// RedirectURIGT applies the GT predicate on the "redirect_uri" field.
func RedirectURIGT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGT(FieldRedirectURI, v))
}

// RedirectURIGTE applies the GTE predicate on the "redirect_uri" field.
func RedirectURIGTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldGTE(FieldRedirectURI, v))
}

// RedirectURILT applies the LT predicate on the "redirect_uri" field.
func RedirectURILT(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLT(FieldRedirectURI, v))
}

// RedirectURILTE applies the LTE predicate on the "redirect_uri" field.
func RedirectURILTE(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldLTE(FieldRedirectURI, v))
}

// RedirectURIContains applies the Contains predicate on the "redirect_uri" field.
func RedirectURIContains(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContains(FieldRedirectURI, v))
}

// RedirectURIHasPrefix applies the HasPrefix predicate on the "redirect_uri" field.
func RedirectURIHasPrefix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasPrefix(FieldRedirectURI, v))
}

// RedirectURIHasSuffix applies the HasSuffix predicate on the "redirect_uri" field.
func RedirectURIHasSuffix(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldHasSuffix(FieldRedirectURI, v))
}

// RedirectURIEqualFold applies the EqualFold predicate on the "redirect_uri" field.
func RedirectURIEqualFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldEqualFold(FieldRedirectURI, v))
}

// RedirectURIContainsFold applies the ContainsFold predicate on the "redirect_uri" field.
func RedirectURIContainsFold(v string) predicate.OIDCConfig {
	return predicate.OIDCConfig(sql.FieldContainsFold(FieldRedirectURI, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OIDCConfig) predicate.OIDCConfig {
	return predicate.OIDCConfig(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OIDCConfig) predicate.OIDCConfig {
	return predicate.OIDCConfig(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OIDCConfig) predicate.OIDCConfig {
	return predicate.OIDCConfig(func(s *sql.Selector) {
		p(s.Not())
	})
}
