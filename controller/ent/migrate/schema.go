// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AgentsColumns holds the columns for the "agents" table.
	AgentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "hostname", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AgentsTable holds the schema information for the "agents" table.
	AgentsTable = &schema.Table{
		Name:       "agents",
		Columns:    AgentsColumns,
		PrimaryKey: []*schema.Column{AgentsColumns[0]},
	}
	// OidcConfigsColumns holds the columns for the "oidc_configs" table.
	OidcConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "provider_key", Type: field.TypeString, Unique: true},
		{Name: "provider_name", Type: field.TypeString},
		{Name: "discovery_uri", Type: field.TypeString},
		{Name: "client_id", Type: field.TypeString},
		{Name: "client_secret", Type: field.TypeString},
		{Name: "redirect_uri", Type: field.TypeString},
	}
	// OidcConfigsTable holds the schema information for the "oidc_configs" table.
	OidcConfigsTable = &schema.Table{
		Name:       "oidc_configs",
		Columns:    OidcConfigsColumns,
		PrimaryKey: []*schema.Column{OidcConfigsColumns[0]},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "tag_name_value",
				Unique:  true,
				Columns: []*schema.Column{TagsColumns[1], TagsColumns[2]},
			},
		},
	}
	// AgentTagsColumns holds the columns for the "agent_tags" table.
	AgentTagsColumns = []*schema.Column{
		{Name: "agent_id", Type: field.TypeInt},
		{Name: "tag_id", Type: field.TypeInt},
	}
	// AgentTagsTable holds the schema information for the "agent_tags" table.
	AgentTagsTable = &schema.Table{
		Name:       "agent_tags",
		Columns:    AgentTagsColumns,
		PrimaryKey: []*schema.Column{AgentTagsColumns[0], AgentTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "agent_tags_agent_id",
				Columns:    []*schema.Column{AgentTagsColumns[0]},
				RefColumns: []*schema.Column{AgentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "agent_tags_tag_id",
				Columns:    []*schema.Column{AgentTagsColumns[1]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AgentsTable,
		OidcConfigsTable,
		TagsTable,
		AgentTagsTable,
	}
)

func init() {
	AgentTagsTable.ForeignKeys[0].RefTable = AgentsTable
	AgentTagsTable.ForeignKeys[1].RefTable = TagsTable
}
